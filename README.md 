pip3 install spidev 
pip3 install azure-iot-device 

#THINGS TO DO
1. Define program that reads moisture data and scales values for best use
2. Populate database with soil moisture data (real) 
ABOVE ARE DONE
3. Train linear regression model on past soil moisture data to predict future moisture 
4. Integrate weather API to query: humidity, expected level of rain, and temperature
5. Train linear regression model on past data (2 weeks?) to predict future values (see above) 
6. Refine front end with (matplotlib charts : azure charts ) ?

# EXAMPLE REVISED STRUCTURE
FarmSmart/
│
├── src/                  # For the main data collection script
│   ├── moisture_temp.py  # Reads moisture and temperature and posts to MongoDB and IoT
│   └── weather_api.py    # Fetches weather data (you’ll implement this next)
│
├── app/                  # For the Flask app (front-end and back-end combined)
│   ├── static/           # Static files (CSS, images, etc.)
│   ├── templates/        # HTML templates (dashboard UI)
│   ├── routes.py         # Flask routes to serve the dashboard and interact with the DB
│   ├── gpt_summary.py    # Handles GPT API interaction for summaries
│   └── regression.py     # Contains the logic for your regression model
│
├── config/               # Configuration files (API keys, environment variables)
│   └── config.py         # Stores your configurations (DB credentials, API keys)
│
└── requirements.txt      # Dependencies
